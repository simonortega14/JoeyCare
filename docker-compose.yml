name: joeycare

networks:
  red-backend:
  red-frontend:

volumes:
  mysql_data:
  ecografias_storage:   # volumen persistente para los archivos DICOM / ecograf√≠as

services:
  # === Base de datos MySQL ===
  mysql:
    image: mysql:8.0
    container_name: mysql-joeycare
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: joeycare_db
      MYSQL_USER: userapp
      MYSQL_PASSWORD: secret123
    ports:
      - "3307:3306" # host:container
    volumes:
      # scripts iniciales (creaci√≥n de tablas, seed, etc.)
      - ./infra/mysql/initdb.d:/docker-entrypoint-initdb.d:ro
      # config mysql personalizada
      - ./infra/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      # volumen nombrado para que la data NO se borre entre reinicios
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - red-backend

  # === Frontend build (Vite/React) ===
  frontend:
    build:
      context: ./apps/frontend
    container_name: frontend
    restart: unless-stopped
    # No exponer puerto directo: Nginx es la puerta de entrada p√∫blica
    networks:
      - red-frontend
      - red-backend

  # === Microservicio: Usuarios ===
  ms-usuarios:
    build:
      context: ./apps/ms-usuarios
    container_name: ms-usuarios
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      DB_HOST: mysql
      DB_PORT: "3306"
      DB_USER: userapp
      DB_PASSWORD: secret123
      DB_NAME: joeycare_db
      SVC_NAME: ms-usuarios
      JWT_SECRET: supersecret_cambia_esto
      JWT_EXPIRES_IN: 8h
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - red-backend

  # === Microservicio: Ecograf√≠as ===
  ms-ecografias:
    build:
      context: ./apps/ms-ecografias
    container_name: ms-ecografias
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      DB_HOST: mysql
      DB_PORT: "3306"
      DB_USER: userapp
      DB_PASSWORD: secret123
      DB_NAME: joeycare_db
      JWT_SECRET: supersecret_cambia_esto
      STORAGE_ROOT: /var/joeycare/storage/ecografias
      PORT: "3002"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ecografias_storage:/var/joeycare/storage/ecografias
    networks:
      - red-backend

  # === Microservicio: Visualizador ===
  ms-visualizador:
    build:
      context: ./apps/ms-visualizador
    container_name: ms-visualizador
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      SVC_NAME: ms-visualizador
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - red-backend

  # === Microservicio: Reportes ===
  ms-reportes:
    build:
      context: ./apps/ms-reportes
    container_name: ms-reportes
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      DB_HOST: mysql
      DB_PORT: "3306"
      DB_USER: userapp
      DB_PASSWORD: secret123
      DB_NAME: joeycare_db
      SVC_NAME: ms-reportes
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - red-backend

  # === Nginx (sirve frontend y proxyea APIs) ===
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx-joeycare
    restart: unless-stopped
    depends_on:
      - frontend
      - ms-usuarios
      - ms-ecografias
      - ms-visualizador
      - ms-reportes
    ports:
      - "80:80"
    volumes:
      # Config completa de nginx (rutas /api/* etc)
      - ./infra/nginx:/etc/nginx/conf.d:ro

      # Build est√°tico del frontend (aseg√∫rate de haber hecho el build de vite: npm run build)
      - ./apps/frontend/dist:/usr/share/nginx/html:ro

      # üëá Mismo volumen nombrado que usa ms-ecografias, pero de solo lectura.
      # As√≠ nginx puede servir /files/... sin depender de una ruta local del host.
      - ecografias_storage:/var/joeycare/storage/ecografias:ro
    networks:
      - red-frontend
      - red-backend
